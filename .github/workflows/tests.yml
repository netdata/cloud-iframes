---
name: tests

on:
  push:
    branches: [master, develop]
  workflow_dispatch:
    inputs:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  tests:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "12.x"
          cache: "npm"
      - name: Install dependencies
        run: npm install

      - name: Run Tests
        if: github.event_name != 'pull_request'
        continue-on-error: true
        id: run-tests
        run: npm test -- --coverage --watchAll=false > /tmp/coverage_report

      - name: Post Test Coverage Report in PR
        uses: ArtiomTr/jest-coverage-report-action@v2
        continue-on-error: true
        if: github.event_name == 'pull_request'
        with:
          test-script: npm test
          annotations: all

      - name: Configure AWS Credentials
        if: (steps.run-tests.outcome == 'failure' || steps.run-tests.outcome == 'success') && github.ref == 'refs/heads/develop'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ROOT_ACCOUNT_ID }}:role/github-test-reports
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Upload report to test-reports bucket
        if: (steps.run-tests.outcome == 'failure' || steps.run-tests.outcome == 'success') && github.ref == 'refs/heads/develop'
        run: |
          aws s3 cp /tmp/coverage_report s3://${{ secrets.AWS_TEST_AUTOMATION_STORAGE_BUCKET }}/${{ github.event.repository.name }}/coverage_report

      - name: Publish test coverage report
        if: (steps.run-tests.outcome == 'failure' || steps.run-tests.outcome == 'success') && github.ref == 'refs/heads/develop'
        uses: aurelien-baudet/workflow-dispatch@v2
        with:
          repo: netdata/cloud-workflows
          ref: refs/heads/main
          workflow: test_coverage_publisher.yml
          token: ${{ secrets.TEST_AUTOMATION_TOKEN }}
          inputs: '{ "service-name": "${{ github.event.repository.name }}"}'
